name: Create GitHub Draft Releases

on:
  workflow_dispatch:

jobs:
  Current_Version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.master_Current_Version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get current version
        id: master_Current_Version
        run: |
          current_version=$(grep "__version__" alphamap/__init__.py | cut -f3 -d ' ' | sed 's/"//g')
          echo "version=$current_version" >> $GITHUB_OUTPUT

  Create_Draft_On_GitHub:
    runs-on: ubuntu-latest
    needs: Current_Version
    outputs:
      upload_url: ${{ steps.draft_release.outputs.upload_url }}
    steps:
      - name: Create Draft Release
        id: draft_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.Current_Version.outputs.version }}
          release_name: Release version ${{ needs.Current_Version.outputs.version }}
          draft: true
          prerelease: false
      - name: Move release to hidden folder
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_id=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ needs.Current_Version.outputs.version }}" \
            | jq -r .id)
          curl -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/$release_id" \
            -d '{"draft": true, "name": ".hidden/v${{ needs.Current_Version.outputs.version }}"}'
