on:
  workflow_dispatch:


name: Test installer building

jobs:
Version_for_Fork:
  runs-on: ubuntu-latest
  outputs:
    version: ${{ steps.fork_version.outputs.version }}
  steps:
    - name: Generate fork version
      id: fork_version
      run: |
        echo ::set-output name=version::fork-$(date +'%Y.%m.%d-%H%M%S')

  Create_Release_On_Fork:
  runs-on: ubuntu-latest
  needs: Version_for_Fork
  outputs:
    upload_url: ${{ needs.Create_Release_On_Fork.outputs.upload_url }}
  steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.Version_for_Fork.outputs.version }}
        release_name: Fork Release ${{ needs.Version_for_Fork.outputs.version }}
        draft: true
        prerelease: false
          
  Create_MacOS_Release:
    runs-on: macos-latest
    needs: Create_Draft_On_GitHub
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Conda info
        shell: bash -l {0}
        run: conda info
      - name: Creating installer for MacOS
        shell: bash -l {0}
        run: |
          cd misc/one_click_macos
          . ./create_installer_macos.sh
      - name: Test installer for MacOS
        shell: bash -l {0}
        run: |
          sudo installer -pkg misc/one_click_macos/dist/alphamap_gui_installer_macos.pkg -target /
      - name: Upload MacOS Installer
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Create_Release_On_Fork.outputs.upload_url }}
          asset_path: misc/one_click_macos/dist/alphamap_gui_installer_macos.pkg
          asset_name: alphamap_gui_installer_macos.pkg
          asset_content_type: application/octet-stream
  Create_Windows_Release:
    runs-on: windows-latest
    needs: Create_Draft_On_GitHub
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Conda info
        shell: bash -l {0}
        run: conda info
      - name: Creating installer for Windows
        shell: bash -l {0}
        run: |
          cd misc/one_click_windows
          . ./create_installer_windows.sh
      - name: Test installer for Windows
        shell: bash -l {0}
        run: |
          cd misc/one_click_windows/dist/
          echo "TODO, this test seems to freeze the runner..."
          # ./alphamap_gui_installer_windows.exe //verysilent //log=log.txt //noicons //tasks= //portable=1
          # cat log.txt
      - name: Upload Windows Installer
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Create_Draft_On_GitHub.outputs.upload_url }}
          asset_path: misc/one_click_windows/dist/alphamap_installer_windows.exe
          asset_name: alphamap_installer_windows.exe
          asset_content_type: application/octet-stream
